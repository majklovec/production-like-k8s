apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: minio
  labels:
    app: minio
spec:
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
        svc: minio        
    spec:
      # We only deploy minio to the specified nodes. select your nodes by using `kubectl label node node1 minio-server=true`
      nodeSelector:
        minio-server: "true"
      # This is to maximize network performance, the headless service can be used to connect to a random host.
      hostNetwork: true
      # We're just using a hostpath. This path must be the same on all servers, and should be the largest, fastest block device you can fit.
      volumes:
      - name: storage
        hostPath:
          path: /data/minio/
      containers:
      - name: minio
        env:
        - name: MINIO_ACCESS_KEY
          value: "minio"
        - name: MINIO_SECRET_KEY
          value: "minio123"
        image: minio/minio:RELEASE.2019-10-12T01-39-57Z
        # Unfortunately you must manually define each server. Perhaps autodiscovery via DNS can be implemented in the future.
        args:
        - server
        - http://node{1...4}/data/minio
        ports:
        - containerPort: 9000
        volumeMounts:
        - name: storage
          mountPath: /data/minio/
---
apiVersion: v1
kind: Service
metadata:
  name: minio
spec:
  type: ClusterIP
  ports:
  - port: 9000
    protocol: TCP
    targetPort: 9000
  selector:
    app: minio        
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: webservers
spec:
  rules:
  - host: nginx.192.168.1.102.xip.io
    http:
      paths:
      - path: /
        backend:
          serviceName: minio
          servicePort: 9000          